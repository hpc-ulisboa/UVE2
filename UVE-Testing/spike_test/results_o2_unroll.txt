
### Attempting to compile and run kernel 3mm (size: 2500, type: byte) ...


benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]

UVE executed 3766188 less instructions
RVV executed 35990 more instructions
UVE executed 3457170 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3468074  | 3504064 | 35990      | 1.04           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3813082  | 46894   | -3766188   | -98.77         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3504064  | 46894   | -3457170   | -98.66         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: half-word) ...


benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]

UVE executed 3743703 less instructions
RVV executed 74080 more instructions
UVE executed 3480264 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3477439  | 3551519 | 74080      | 2.13           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3814958  | 71255   | -3743703   | -98.13         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3551519  | 71255   | -3480264   | -97.99         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: integer) ...


benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]

UVE executed 2948703 less instructions
RVV executed 99183 more instructions
UVE executed 3460367 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3484883  | 3584066 | 99183      | 2.85           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3072402  | 123699  | -2948703   | -95.97         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3584066  | 123699  | -3460367   | -96.55         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: float) ...


benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]

UVE executed 2573697 less instructions
RVV executed 96935 more instructions
UVE executed 3083122 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3109886  | 3206821 | 96935      | 3.12           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 2697396  | 123699  | -2573697   | -95.41         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3206821  | 123699  | -3083122   | -96.14         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: double) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 2506197 less instructions
RVV executed 104081 more instructions
UVE executed 3022768 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3124774  | 3228855 | 104081     | 3.33           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 2712284  | 206087  | -2506197   | -92.40         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3228855  | 206087  | -3022768   | -93.62         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: byte) ...


benchmarks/convolution/kernel.c:248:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (x = 1; x < PB_H - 1; x++){
        ^
benchmarks/convolution/kernel.c:248:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 203241 less instructions
RVV executed 139701 less instructions
UVE executed 70351 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 237713   | 98012 | -139701    | -58.77         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 230902   | 27661 | -203241    | -88.02         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 98012    | 27661 | -70351     | -71.78         |
|----------|-------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: half-word) ...


benchmarks/convolution/kernel.c:248:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (x = 1; x < PB_H - 1; x++){
        ^
benchmarks/convolution/kernel.c:248:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 203527 less instructions
RVV executed 201042 less instructions
UVE executed 11315 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 240018   | 38976 | -201042    | -83.76         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 231188   | 27661 | -203527    | -88.04         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 38976    | 27661 | -11315     | -29.03         |
|----------|-------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: integer) ...


benchmarks/convolution/kernel.c:248:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (x = 1; x < PB_H - 1; x++){
        ^
benchmarks/convolution/kernel.c:248:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 162055 less instructions
RVV executed 230945 less instructions
UVE executed 18588 more instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 240018   | 9073  | -230945    | -96.22         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 189716   | 27661 | -162055    | -85.42         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 9073     | 27661 | 18588      | 204.87         |
|----------|-------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: float) ...


benchmarks/convolution/kernel.c:248:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (x = 1; x < PB_H - 1; x++){
        ^
benchmarks/convolution/kernel.c:248:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 141319 less instructions
RVV executed 210791 less instructions
UVE executed 19169 more instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 219283   | 8492  | -210791    | -96.13         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 168980   | 27661 | -141319    | -83.63         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 8492     | 27661 | 19169      | 225.73         |
|----------|-------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: double) ...


benchmarks/convolution/kernel.c:248:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (x = 1; x < PB_H - 1; x++){
        ^
benchmarks/convolution/kernel.c:248:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 141319 less instructions
RVV executed 206183 less instructions
UVE executed 14561 more instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 219283   | 13100 | -206183    | -94.03         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 168980   | 27661 | -141319    | -83.63         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 13100    | 27661 | 14561      | 111.15         |
|----------|-------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: byte) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^

UVE executed 811444 less instructions
RVV executed 15397 more instructions
UVE executed 639259 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 635721   | 651118 | 15397      | 2.42           |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 823303   | 11859  | -811444    | -98.56         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 651118   | 11859  | -639259    | -98.18         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: half-word) ...


benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 806647 less instructions
RVV executed 288823 less instructions
UVE executed 333615 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 638322   | 349499 | -288823    | -45.25         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 822531   | 15884  | -806647    | -98.07         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 349499   | 15884  | -333615    | -95.46         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: integer) ...


benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^

UVE executed 663396 less instructions
RVV executed 293178 less instructions
UVE executed 318558 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 635670   | 342492 | -293178    | -46.12         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 687330   | 23934  | -663396    | -96.52         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 342492   | 23934  | -318558    | -93.01         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: float) ...


benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^

UVE executed 599496 less instructions
RVV executed 253846 less instructions
UVE executed 295472 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 573252   | 319406 | -253846    | -44.28         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 623430   | 23934  | -599496    | -96.16         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 319406   | 23934  | -295472    | -92.51         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: double) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 587421 less instructions
RVV executed 393175 less instructions
UVE executed 144068 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 573252   | 180077 | -393175    | -68.59         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 623430   | 36009  | -587421    | -94.22         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 180077   | 36009  | -144068    | -80.00         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: byte) ...


benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^

UVE executed 1267836 less instructions
RVV executed 5353 more instructions
UVE executed 1410733 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1415555  | 1420908 | 5353       | 0.38           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1278011  | 10175   | -1267836   | -99.20         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1420908  | 10175   | -1410733   | -99.28         |
|----------|---------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: half-word) ...


benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^

UVE executed 1257743 less instructions
RVV executed 18608 more instructions
UVE executed 1416390 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1418057  | 1436665 | 18608      | 1.31           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1278018  | 20275   | -1257743   | -98.41         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1436665  | 20275   | -1416390   | -98.59         |
|----------|---------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: integer) ...


benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^

UVE executed 1237539 less instructions
RVV executed 715142 less instructions
UVE executed 662440 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1418057  | 702915 | -715142    | -50.43         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1278014  | 40475  | -1237539   | -96.83         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 702915   | 40475  | -662440    | -94.24         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: float) ...


benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^

UVE executed 1112538 less instructions
RVV executed 670491 less instructions
UVE executed 582091 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1293057  | 622566 | -670491    | -51.85         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1153013  | 40475  | -1112538   | -96.49         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 622566   | 40475  | -582091    | -93.50         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: double) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1082238 less instructions
RVV executed 999196 less instructions
UVE executed 223086 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1293057  | 293861 | -999196    | -77.27         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1153013  | 70775  | -1082238   | -93.86         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 293861   | 70775  | -223086    | -75.92         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: byte) ...


benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^

UVE executed 90421 less instructions
RVV executed 538 more instructions
UVE executed 88706 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89163    | 89701 | 538        | 0.60           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 91416    | 995   | -90421     | -98.91         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89701    | 995   | -88706     | -98.89         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: half-word) ...


benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^

UVE executed 89671 less instructions
RVV executed 995 more instructions
UVE executed 88662 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89314    | 90309 | 995        | 1.11           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 91318    | 1647  | -89671     | -98.20         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 90309    | 1647  | -88662     | -98.18         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: integer) ...


benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^

UVE executed 78364 less instructions
RVV executed 47221 less instructions
UVE executed 39142 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89314    | 42093 | -47221     | -52.87         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 81315    | 2951  | -78364     | -96.37         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 42093    | 2951  | -39142     | -92.99         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: float) ...


benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^

UVE executed 68362 less instructions
RVV executed 41224 less instructions
UVE executed 35139 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79314    | 38090 | -41224     | -51.98         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 71313    | 2951  | -68362     | -95.86         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 38090    | 2951  | -35139     | -92.25         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: double) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 66406 less instructions
RVV executed 60525 less instructions
UVE executed 13882 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79314    | 18789 | -60525     | -76.31         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 71313    | 4907  | -66406     | -93.12         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 18789    | 4907  | -13882     | -73.88         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel jacobi-1d (size: 2500, type: float) ...


benchmarks/jacobi-1d/kernel.c:109:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:112:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^

UVE executed 48697 less instructions
RVV executed 50952 less instructions
UVE executed 2740 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 54966    | 4014 | -50952     | -92.70         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 49971    | 1274 | -48697     | -97.45         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 4014     | 1274 | -2740      | -68.26         |
|----------|------|------------|----------------|


Kernel jacobi-1d is similar enough

### Attempting to compile and run kernel jacobi-1d (size: 2500, type: double) ...


benchmarks/jacobi-1d/kernel.c:109:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:109:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-1d/kernel.c:112:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:112:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 47449 less instructions
RVV executed 46759 less instructions
UVE executed 5685 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 54966    | 8207 | -46759     | -85.07         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 49971    | 2522 | -47449     | -94.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 8207     | 2522 | -5685      | -69.27         |
|----------|------|------------|----------------|


Kernel jacobi-1d is similar enough

### Attempting to compile and run kernel jacobi-2d (size: 2500, type: float) ...


benchmarks/jacobi-2d/kernel.c:211:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:211:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:212:28: remark: floating point conversion changes vector width. Mixed floating point precision requires an up/down cast that will negatively impact performance. [-Rpass-analysis=loop-vectorize]
      B[i*SIZE+j] = 0.2  * (A[i*SIZE+j] + A[i*SIZE+j-1] + A[i*SIZE+j+1] + A[(i+1)*SIZE+j] + A[(i-1)*SIZE+j]);
                           ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:217:28: remark: floating point conversion changes vector width. Mixed floating point precision requires an up/down cast that will negatively impact performance. [-Rpass-analysis=loop-vectorize]
      A[i*SIZE+j] = 0.2  * (B[i*SIZE+j] + B[i*SIZE+j-1] + B[i*SIZE+j+1] + B[(i+1)*SIZE+j] + B[(i-1)*SIZE+j]);
                           ^

UVE executed 86477 less instructions
RVV executed 69479 less instructions
UVE executed 7775 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 79020    | 9541 | -69479     | -87.93         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 88243    | 1766 | -86477     | -98.00         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 9541     | 1766 | -7775      | -81.49         |
|----------|------|------------|----------------|


Kernel jacobi-2d is similar enough

### Attempting to compile and run kernel jacobi-2d (size: 2500, type: double) ...


benchmarks/jacobi-2d/kernel.c:211:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:211:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:216:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 75533 less instructions
RVV executed 55367 less instructions
UVE executed 10943 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 69804    | 14437 | -55367     | -79.32         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79027    | 3494  | -75533     | -95.58         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 14437    | 3494  | -10943     | -75.80         |
|----------|-------|------------|----------------|


Kernel jacobi-2d is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: byte) ...


benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^

UVE executed 12420 less instructions
RVV executed 14384 less instructions
UVE executed 535 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 620 | -14384     | -95.87         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 12505    | 85  | -12420     | -99.32         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 620      | 85  | -535       | -86.29         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: half-word) ...


benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^

UVE executed 12342 less instructions
RVV executed 14564 less instructions
UVE executed 277 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 440 | -14564     | -97.07         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 12505    | 163 | -12342     | -98.70         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 440      | 163 | -277       | -62.95         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: integer) ...


benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^

UVE executed 12186 less instructions
RVV executed 14173 less instructions
UVE executed 512 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 831 | -14173     | -94.46         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 12505    | 319 | -12186     | -97.45         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 831      | 319 | -512       | -61.61         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: float) ...


benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^

UVE executed 12186 less instructions
RVV executed 14173 less instructions
UVE executed 512 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 831 | -14173     | -94.46         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 12505    | 319 | -12186     | -97.45         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 831      | 319 | -512       | -61.61         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: double) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 11874 less instructions
RVV executed 13088 less instructions
UVE executed 1285 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 15004    | 1916 | -13088     | -87.23         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 12505    | 631  | -11874     | -94.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1916     | 631  | -1285      | -67.07         |
|----------|------|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: byte) ...


benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 49941 less instructions
RVV executed 373 more instructions
UVE executed 45463 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 45807    | 46180 | 373        | 0.81           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 50658    | 717   | -49941     | -98.58         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 46180    | 717   | -45463     | -98.45         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: half-word) ...


benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^

UVE executed 49592 less instructions
RVV executed 671 more instructions
UVE executed 45562 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 45908    | 46579 | 671        | 1.46           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 50609    | 1017  | -49592     | -97.99         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 46579    | 1017  | -45562     | -97.82         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: integer) ...


benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^

UVE executed 38992 less instructions
RVV executed 23368 less instructions
UVE executed 20923 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 45908    | 22540 | -23368     | -50.90         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 40609    | 1617  | -38992     | -96.02         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 22540    | 1617  | -20923     | -92.83         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: float) ...


benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^

UVE executed 33992 less instructions
RVV executed 20266 less instructions
UVE executed 19025 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 40908    | 20642 | -20266     | -49.54         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 35609    | 1617  | -33992     | -95.46         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 20642    | 1617  | -19025     | -92.17         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: double) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 33092 less instructions
RVV executed 30119 less instructions
UVE executed 8272 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 40908    | 10789 | -30119     | -73.63         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 35609    | 2517  | -33092     | -92.93         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10789    | 2517  | -8272      | -76.67         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: byte) ...


benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^

UVE executed 19878 less instructions
RVV executed 21599 less instructions
UVE executed 777 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 22504    | 905 | -21599     | -95.98         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 20006    | 128 | -19878     | -99.36         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 905      | 128 | -777       | -85.86         |
|----------|-----|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: half-word) ...


benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^

UVE executed 19762 less instructions
RVV executed 21893 less instructions
UVE executed 366 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 22504    | 611 | -21893     | -97.28         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 20007    | 245 | -19762     | -98.78         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 611      | 245 | -366       | -59.90         |
|----------|-----|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: integer) ...


benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^

UVE executed 19526 less instructions
RVV executed 21342 less instructions
UVE executed 683 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 22504    | 1162 | -21342     | -94.84         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20005    | 479  | -19526     | -97.61         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1162     | 479  | -683       | -58.78         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: float) ...


benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^

UVE executed 17026 less instructions
RVV executed 18846 less instructions
UVE executed 679 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20004    | 1158 | -18846     | -94.21         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 17505    | 479  | -17026     | -97.26         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1158     | 479  | -679       | -58.64         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: double) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 16558 less instructions
RVV executed 17449 less instructions
UVE executed 1608 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20004    | 2555 | -17449     | -87.23         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 17505    | 947  | -16558     | -94.59         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 2555     | 947  | -1608      | -62.94         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel sgd (size: 0, type: double) ...


benchmarks/sgd/kernel.c:276:13: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
            for (j = 0; j /*< BATCH_SIZE && b + j*/ < PB_N; j++)
            ^
benchmarks/sgd/kernel.c:276:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:265:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < PB_N /*BATCH_SIZE*/; i++)
        ^
benchmarks/sgd/kernel.c:265:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:257:9: remark: loop not vectorized: cannot identify array bounds [-Rpass-analysis=loop-vectorize]
        for (i = 0; i /*< BATCH_SIZE && b+i*/ < PB_N; i++) {
        ^
benchmarks/sgd/kernel.c:257:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
benchmarks/sgd/kernel.c:289:5: remark: loop not vectorized: cannot identify array bounds [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++) {
    ^
benchmarks/sgd/kernel.c:289:5: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
benchmarks/sgd/kernel.c:301:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:301:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:306:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:306:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:310:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:310:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:289:5: remark: loop not vectorized: cannot identify array bounds [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++) {
    ^
benchmarks/sgd/kernel.c:289:5: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
benchmarks/sgd/kernel.c:301:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:301:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:306:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:306:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:310:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:310:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 6352731 less instructions
RVV executed 6952550 less instructions
UVE executed 777790 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 8408724  | 1456174 | -6952550   | -82.68         |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 7031115  | 678384  | -6352731   | -90.35         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1456174  | 678384  | -777790    | -53.41         |
|----------|---------|------------|----------------|


Kernel sgd is similar enough

### Attempting to compile and run kernel spmv_ellpack (size: 0, type: double) ...


benchmarks/spmv_ellpack/kernel.c:62:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < L; j++) {
        ^
benchmarks/spmv_ellpack/kernel.c:62:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 48414 less instructions
RVV executed 28640 less instructions
UVE executed 24216 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 57314    | 28674 | -28640     | -49.97         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 52872    | 4458  | -48414     | -91.57         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 28674    | 4458  | -24216     | -84.45         |
|----------|-------|------------|----------------|


Kernel spmv_ellpack is similar enough

### Attempting to compile and run kernel spmv_ellpack_delimiters (size: 0, type: double) ...


benchmarks/spmv_ellpack_delimiters/kernel.c:71:9: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
        for (int j = 0; j < cur_nnz; j++) {
        ^
benchmarks/spmv_ellpack_delimiters/kernel.c:71:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 21889 less instructions
RVV executed 3209 more instructions
UVE executed 25777 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 25560    | 28769 | 3209       | 12.55          |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 24881    | 2992  | -21889     | -87.97         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 28769    | 2992  | -25777     | -89.60         |
|----------|-------|------------|----------------|


Kernel spmv_ellpack_delimiters is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: byte) ...


benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^

UVE executed 69632 less instructions
RVV executed 76739 less instructions
UVE executed 2894 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 3277 | -76739     | -95.90         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 70015    | 383  | -69632     | -99.45         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 3277     | 383  | -2894      | -88.31         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: half-word) ...


benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^

UVE executed 69283 less instructions
RVV executed 77689 less instructions
UVE executed 1593 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 2327 | -77689     | -97.09         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 70017    | 734  | -69283     | -98.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 2327     | 734  | -1593      | -68.46         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: integer) ...


benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^

UVE executed 68579 less instructions
RVV executed 75578 less instructions
UVE executed 3002 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 4438 | -75578     | -94.45         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 70015    | 1436 | -68579     | -97.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 4438     | 1436 | -3002      | -67.64         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: float) ...


benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 2) [-Rpass=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^

UVE executed 66079 less instructions
RVV executed 73082 less instructions
UVE executed 2998 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 77516    | 4434 | -73082     | -94.28         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 67515    | 1436 | -66079     | -97.87         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 4434     | 1436 | -2998      | -67.61         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: double) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is not beneficial [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 64675 less instructions
RVV executed 67623 less instructions
UVE executed 7053 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 77516    | 9893 | -67623     | -87.24         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 67515    | 2840 | -64675     | -95.79         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 9893     | 2840 | -7053      | -71.29         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: byte) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 12584 less instructions
UVE executed 11568 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11980    | 11980 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12996    | 412   | -12584     | -96.83         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11980    | 412   | -11568     | -96.56         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: half-word) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 12486 less instructions
UVE executed 11567 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12030    | 12030 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12949    | 463   | -12486     | -96.42         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12030    | 463   | -11567     | -96.15         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: integer) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 9934 less instructions
UVE executed 11365 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11930    | 11930 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10499    | 565   | -9934      | -94.62         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11930    | 565   | -11365     | -95.26         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: float) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE: Values were 872898.812500 and 872898.562500 with difference of 0.25 at index 16
UVE: Values were -16372533.000000 and -16372531.000000 with difference of 2 at index 18
UVE: Values were -20628568.000000 and -20628566.000000 with difference of 2 at index 19
UVE: Values were -60339964.000000 and -60339968.000000 with difference of 4 at index 20
UVE: Values were 113169176.000000 and 113169184.000000 with difference of 8 at index 21
UVE: Values were -315977856.000000 and -315977824.000000 with difference of 32 at index 22
UVE: Values were 147261728.000000 and 147261712.000000 with difference of 16 at index 23
UVE: Values were 651010560.000000 and 651010432.000000 with difference of 128 at index 25
UVE: Values were -1185378560.000000 and -1185377920.000000 with difference of 640 at index 26
UVE: Values were -12704761856.000000 and -12704755712.000000 with difference of 6144 at index 27
UVE: Values were 7187345408.000000 and 7187340800.000000 with difference of 4608 at index 28
UVE: Values were 39105835008.000000 and 39105814528.000000 with difference of 20480 at index 29
UVE: Values were 66696314880.000000 and 66696286208.000000 with difference of 28672 at index 30
UVE: Values were 48554946560.000000 and 48554930176.000000 with difference of 16384 at index 31
UVE: Values were -607494537216.000000 and -607494275072.000000 with difference of 262144 at index 32
UVE: Values were 610435072000.000000 and 610434744320.000000 with difference of 327680 at index 33
UVE: Values were -1177840254976.000000 and -1177839861760.000000 with difference of 393216 at index 34
UVE: Values were -1110662184960.000000 and -1110662053888.000000 with difference of 131072 at index 35
UVE: Values were -2864352329728.000000 and -2864351805440.000000 with difference of 524288 at index 36
UVE: Values were 6941679026176.000000 and 6941676929024.000000 with difference of 2097152 at index 37
UVE: Values were 7714436022272.000000 and 7714433925120.000000 with difference of 2097152 at index 38
UVE: Values were -937770024960.000000 and -937770352640.000000 with difference of 327680 at index 39
UVE: Values were 2280469561344.000000 and 2280468512768.000000 with difference of 1048576 at index 40
UVE: Values were 324196564992.000000 and 324198203392.000000 with difference of 1638400 at index 41
UVE: Values were -15020143411200.000000 and -15020142362624.000000 with difference of 1048576 at index 42
UVE: Values were 181748151353344.000000 and 181748101021696.000000 with difference of 50331648 at index 43
UVE: Values were -191808457932800.000000 and -191808407601152.000000 with difference of 50331648 at index 44
UVE: Values were 82725641912320.000000 and 82725616746496.000000 with difference of 25165824 at index 45
UVE: Values were -2094262694969344.000000 and -2094262158098432.000000 with difference of 536870912 at index 46
UVE: Values were -3798025621209088.000000 and -3798024815902720.000000 with difference of 805306368 at index 47
UVE: Values were 28793297543626752.000000 and 28793295396143104.000000 with difference of 2147483648 at index 48
UVE: Values were 54335648441565184.000000 and 54335639851630592.000000 with difference of 8589934592 at index 49
UVE executed 8709 less instructions
UVE executed 10140 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 10705 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 9274     | 565   | -8709      | -93.91         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 565   | -10140     | -94.72         |
|----------|-------|------------|----------------|


Kernel trisolv: Did not generate result similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: double) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE: Values were -3798025834736546.500000 and -3798025834736547.500000 with difference of 1 at index 47
UVE executed 8484 less instructions
UVE executed 9915 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 10705 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 9274     | 790   | -8484      | -91.48         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 790   | -9915      | -92.62         |
|----------|-------|------------|----------------|


Kernel trisolv: Did not generate result similar enough
