
### Attempting to compile and run kernel 3mm (size: 2500, type: byte) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 3765984 less instructions
RVV executed 31258 more instructions
UVE executed 3437140 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3452776  | 3484034 | 31258      | 0.91           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3812878  | 46894   | -3765984   | -98.77         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3484034  | 46894   | -3437140   | -98.65         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: half-word) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 3743543 less instructions
RVV executed 76722 more instructions
UVE executed 3467610 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3462143  | 3538865 | 76722      | 2.22           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3814798  | 71255   | -3743543   | -98.13         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3538865  | 71255   | -3467610   | -97.99         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: integer) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 2948543 less instructions
RVV executed 76722 more instructions
UVE executed 3422610 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3469587  | 3546309 | 76722      | 2.21           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3072242  | 123699  | -2948543   | -95.97         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3546309  | 123699  | -3422610   | -96.51         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: float) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 2573543 less instructions
RVV executed 74426 more instructions
UVE executed 3045317 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3094590  | 3169016 | 74426      | 2.41           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 2697242  | 123699  | -2573543   | -95.41         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3169016  | 123699  | -3045317   | -96.10         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel 3mm (size: 2500, type: double) ...


benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (k = 0; k < sizeK; k++)
                ^
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/3mm/kernel.c:231:10: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 2506043 less instructions
RVV executed 74424 more instructions
UVE executed 2977815 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3109478  | 3183902 | 74424      | 2.39           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 2712130  | 206087  | -2506043   | -92.40         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 3183902  | 206087  | -2977815   | -93.53         |
|----------|---------|------------|----------------|


Kernel 3mm is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: byte) ...


benchmarks/convolution/kernel.c:251:17: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (j = -1; j <= 1; j++)
                ^
benchmarks/convolution/kernel.c:251:17: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 81226 less instructions
RVV executed 105787 less instructions
UVE executed 117994 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 237618   | 131831 | -105787    | -44.52         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 95063    | 13837  | -81226     | -85.44         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 131831   | 13837  | -117994    | -89.50         |
|----------|--------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: half-word) ...


benchmarks/convolution/kernel.c:251:17: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (j = -1; j <= 1; j++)
                ^
benchmarks/convolution/kernel.c:251:17: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 81225 less instructions
RVV executed 71326 less instructions
UVE executed 154760 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 239923   | 168597 | -71326     | -29.73         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 95062    | 13837  | -81225     | -85.44         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 168597   | 13837  | -154760    | -91.79         |
|----------|--------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: integer) ...


benchmarks/convolution/kernel.c:251:17: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (j = -1; j <= 1; j++)
                ^
benchmarks/convolution/kernel.c:251:17: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 81078 less instructions
RVV executed 2215 more instructions
UVE executed 228301 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 239923   | 242138 | 2215       | 0.92           |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 94915    | 13837  | -81078     | -85.42         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 242138   | 13837  | -228301    | -94.29         |
|----------|--------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: float) ...


benchmarks/convolution/kernel.c:251:17: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (j = -1; j <= 1; j++)
                ^
benchmarks/convolution/kernel.c:251:17: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 62647 less instructions
RVV executed 16040 more instructions
UVE executed 221391 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 219188   | 235228 | 16040      | 7.32           |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 76484    | 13837  | -62647     | -81.91         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 235228   | 13837  | -221391    | -94.12         |
|----------|--------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel convolution (size: 2500, type: double) ...


benchmarks/convolution/kernel.c:251:17: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
                for (j = -1; j <= 1; j++)
                ^
benchmarks/convolution/kernel.c:251:17: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 55735 less instructions
RVV executed 4696 less instructions
UVE executed 193743 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 219188   | 214492 | -4696      | -2.14          |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 76484    | 20749  | -55735     | -72.87         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 214492   | 20749  | -193743    | -90.33         |
|----------|--------|------------|----------------|


Kernel convolution is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: byte) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:521:32: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/covariance/kernel.c:517:13 [-Rpass-analysis=loop-vectorize]
            cov[j * sizeM + i] = cov[i * sizeM + j];
                               ^
benchmarks/covariance/kernel.c:516:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (j = i; j < sizeM; j++) {
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 808679 less instructions
RVV executed 7357 more instructions
UVE executed 628420 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 632922   | 640279 | 7357       | 1.16           |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 820538   | 11859  | -808679    | -98.55         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 640279   | 11859  | -628420    | -98.15         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: half-word) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:521:32: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/covariance/kernel.c:517:13 [-Rpass-analysis=loop-vectorize]
            cov[j * sizeM + i] = cov[i * sizeM + j];
                               ^
benchmarks/covariance/kernel.c:516:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (j = i; j < sizeM; j++) {
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 803756 less instructions
RVV executed 315479 less instructions
UVE executed 304160 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 635523   | 320044 | -315479    | -49.64         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 819640   | 15884  | -803756    | -98.06         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 320044   | 15884  | -304160    | -95.04         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: integer) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:521:32: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/covariance/kernel.c:517:13 [-Rpass-analysis=loop-vectorize]
            cov[j * sizeM + i] = cov[i * sizeM + j];
                               ^
benchmarks/covariance/kernel.c:516:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (j = i; j < sizeM; j++) {
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 663871 less instructions
RVV executed 491129 less instructions
UVE executed 117808 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 632871   | 141742 | -491129    | -77.60         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 687805   | 23934  | -663871    | -96.52         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 141742   | 23934  | -117808    | -83.11         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: float) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:521:32: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/covariance/kernel.c:517:13 [-Rpass-analysis=loop-vectorize]
            cov[j * sizeM + i] = cov[i * sizeM + j];
                               ^
benchmarks/covariance/kernel.c:516:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (j = i; j < sizeM; j++) {
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 600118 less instructions
RVV executed 429980 less instructions
UVE executed 115214 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 569128   | 139148 | -429980    | -75.55         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 624052   | 23934  | -600118    | -96.16         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 139148   | 23934  | -115214    | -82.80         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel covariance (size: 2500, type: double) ...


benchmarks/covariance/kernel.c:488:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < sizeN; i++)
        ^
benchmarks/covariance/kernel.c:488:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:502:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeM; j++)
        ^
benchmarks/covariance/kernel.c:502:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/covariance/kernel.c:521:32: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/covariance/kernel.c:517:13 [-Rpass-analysis=loop-vectorize]
            cov[j * sizeM + i] = cov[i * sizeM + j];
                               ^
benchmarks/covariance/kernel.c:516:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (j = i; j < sizeM; j++) {
        ^
benchmarks/covariance/kernel.c:518:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (k = 0; k < sizeN; k++)
            ^
benchmarks/covariance/kernel.c:518:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 588043 less instructions
RVV executed 403810 less instructions
UVE executed 129309 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 569128   | 165318 | -403810    | -70.95         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 624052   | 36009  | -588043    | -94.23         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 165318   | 36009  | -129309    | -78.22         |
|----------|--------|------------|----------------|


Kernel covariance is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: byte) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1265337 less instructions
RVV executed 7955 more instructions
UVE executed 1408137 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1410357  | 1418312 | 7955       | 0.56           |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1275512  | 10175   | -1265337   | -99.20         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 1418312  | 10175   | -1408137   | -99.28         |
|----------|---------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: half-word) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1255244 less instructions
RVV executed 755388 less instructions
UVE executed 637196 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1412859  | 657471 | -755388    | -53.47         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1275519  | 20275  | -1255244   | -98.41         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 657471   | 20275  | -637196    | -96.92         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: integer) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1235040 less instructions
RVV executed 1159588 less instructions
UVE executed 212796 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1412859  | 253271 | -1159588   | -82.07         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1275515  | 40475  | -1235040   | -96.83         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 253271   | 40475  | -212796    | -84.02         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: float) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1110038 less instructions
RVV executed 1064888 less instructions
UVE executed 182546 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1287909  | 223021 | -1064888   | -82.68         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1150513  | 40475  | -1110038   | -96.48         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 223021   | 40475  | -182546    | -81.85         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemm (size: 2500, type: double) ...


benchmarks/gemm/kernel.c:342:8: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
       for (j = 0; j < sizeJ; j++)
       ^
benchmarks/gemm/kernel.c:342:8: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j = 0; j < sizeJ; j++)
    ^
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
benchmarks/gemm/kernel.c:339:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1079738 less instructions
RVV executed 1003988 less instructions
UVE executed 213146 less instructions than RVV
|----------|--------|------------|----------------|
| Original | RVV    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1287909  | 283921 | -1003988   | -77.95         |
|----------|--------|------------|----------------|
| Original | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 1150513  | 70775  | -1079738   | -93.85         |
|----------|--------|------------|----------------|
| RVV      | UVE    | Difference | Difference (%) |
|----------|--------|------------|----------------|
| 283921   | 70775  | -213146    | -75.07         |
|----------|--------|------------|----------------|


Kernel gemm is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: byte) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 90186 less instructions
RVV executed 545 more instructions
UVE executed 88713 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89163    | 89708 | 545        | 0.61           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 91181    | 995   | -90186     | -98.91         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89708    | 995   | -88713     | -98.89         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: half-word) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 89510 less instructions
RVV executed 49082 less instructions
UVE executed 38585 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89314    | 40232 | -49082     | -54.95         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 91157    | 1647  | -89510     | -98.19         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 40232    | 1647  | -38585     | -95.91         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: integer) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 78364 less instructions
RVV executed 74294 less instructions
UVE executed 12069 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 89314    | 15020 | -74294     | -83.18         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 81315    | 2951  | -78364     | -96.37         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 15020    | 2951  | -12069     | -80.35         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: float) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 68362 less instructions
RVV executed 64899 less instructions
UVE executed 11464 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79314    | 14415 | -64899     | -81.83         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 71313    | 2951  | -68362     | -95.86         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 14415    | 2951  | -11464     | -79.53         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel gemver (size: 2500, type: double) ...


benchmarks/gemver/kernel.c:637:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:637:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:641:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:641:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:644:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (i = 0; i < sizeN; i++)
    ^
benchmarks/gemver/kernel.c:644:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/gemver/kernel.c:648:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < sizeN; j++)
        ^
benchmarks/gemver/kernel.c:648:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 66406 less instructions
RVV executed 60525 less instructions
UVE executed 13882 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79314    | 18789 | -60525     | -76.31         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 71313    | 4907  | -66406     | -93.12         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 18789    | 4907  | -13882     | -73.88         |
|----------|-------|------------|----------------|


Kernel gemver is similar enough

### Attempting to compile and run kernel jacobi-1d (size: 2500, type: float) ...


benchmarks/jacobi-1d/kernel.c:109:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:109:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-1d/kernel.c:112:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:112:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 48697 less instructions
RVV executed 50799 less instructions
UVE executed 2893 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 54966    | 4167 | -50799     | -92.42         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 49971    | 1274 | -48697     | -97.45         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 4167     | 1274 | -2893      | -69.43         |
|----------|------|------------|----------------|


Kernel jacobi-1d is similar enough

### Attempting to compile and run kernel jacobi-1d (size: 2500, type: double) ...


benchmarks/jacobi-1d/kernel.c:109:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:109:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-1d/kernel.c:112:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 1; i < SIZE - 1; ++i)
    ^
benchmarks/jacobi-1d/kernel.c:112:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 47449 less instructions
RVV executed 46759 less instructions
UVE executed 5685 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 54966    | 8207 | -46759     | -85.07         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 49971    | 2522 | -47449     | -94.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 8207     | 2522 | -5685      | -69.27         |
|----------|------|------------|----------------|


Kernel jacobi-1d is similar enough

### Attempting to compile and run kernel jacobi-2d (size: 2500, type: float) ...


benchmarks/jacobi-2d/kernel.c:211:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:211:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:212:28: remark: floating point conversion changes vector width. Mixed floating point precision requires an up/down cast that will negatively impact performance. [-Rpass-analysis=loop-vectorize]
      B[i*SIZE+j] = 0.2  * (A[i*SIZE+j] + A[i*SIZE+j-1] + A[i*SIZE+j+1] + A[(i+1)*SIZE+j] + A[(i-1)*SIZE+j]);
                           ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:217:28: remark: floating point conversion changes vector width. Mixed floating point precision requires an up/down cast that will negatively impact performance. [-Rpass-analysis=loop-vectorize]
      A[i*SIZE+j] = 0.2  * (B[i*SIZE+j] + B[i*SIZE+j-1] + B[i*SIZE+j+1] + B[(i+1)*SIZE+j] + B[(i-1)*SIZE+j]);
                           ^

UVE executed 86477 less instructions
RVV executed 69479 less instructions
UVE executed 7775 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 79020    | 9541 | -69479     | -87.93         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 88243    | 1766 | -86477     | -98.00         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 9541     | 1766 | -7775      | -81.49         |
|----------|------|------------|----------------|


Kernel jacobi-2d is similar enough

### Attempting to compile and run kernel jacobi-2d (size: 2500, type: double) ...


benchmarks/jacobi-2d/kernel.c:211:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:211:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/jacobi-2d/kernel.c:216:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int j = 1; j < SIZE - 1; j++) {
    ^
benchmarks/jacobi-2d/kernel.c:216:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 75533 less instructions
RVV executed 55367 less instructions
UVE executed 10943 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 69804    | 14437 | -55367     | -79.32         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 79027    | 3494  | -75533     | -95.58         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 14437    | 3494  | -10943     | -75.80         |
|----------|-------|------------|----------------|


Kernel jacobi-2d is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: byte) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 1504 less instructions
RVV executed 14721 less instructions
UVE executed 198 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 283 | -14721     | -98.11         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 1589     | 85  | -1504      | -94.65         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 283      | 85  | -198       | -69.96         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: half-word) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 2978 less instructions
RVV executed 14485 less instructions
UVE executed 356 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 519 | -14485     | -96.54         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 3141     | 163 | -2978      | -94.81         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 519      | 163 | -356       | -68.59         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: integer) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 5947 less instructions
RVV executed 14017 less instructions
UVE executed 668 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 987 | -14017     | -93.42         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 6266     | 319 | -5947      | -94.91         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 987      | 319 | -668       | -67.68         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: float) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 12186 less instructions
RVV executed 14017 less instructions
UVE executed 668 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 15004    | 987 | -14017     | -93.42         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 12505    | 319 | -12186     | -97.45         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 987      | 319 | -668       | -67.68         |
|----------|-----|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel memcpy (size: 2500, type: double) ...


benchmarks/memcpy/kernel.c:117:2: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int i = 0; i < SIZE; ++i) {
        ^
benchmarks/memcpy/kernel.c:117:2: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 11874 less instructions
RVV executed 13088 less instructions
UVE executed 1285 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 15004    | 1916 | -13088     | -87.23         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 12505    | 631  | -11874     | -94.95         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1916     | 631  | -1285      | -67.07         |
|----------|------|------------|----------------|


Kernel memcpy is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: byte) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 49941 less instructions
RVV executed 374 more instructions
UVE executed 45464 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 45807    | 46181 | 374        | 0.82           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 50658    | 717   | -49941     | -98.58         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 46181    | 717   | -45464     | -98.45         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: half-word) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 49592 less instructions
RVV executed 24421 less instructions
UVE executed 20470 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 45908    | 21487 | -24421     | -53.20         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 50609    | 1017  | -49592     | -97.99         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 21487    | 1017  | -20470     | -95.27         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: integer) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 38992 less instructions
RVV executed 37221 less instructions
UVE executed 7070 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 45908    | 8687 | -37221     | -81.08         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 40609    | 1617 | -38992     | -96.02         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 8687     | 1617 | -7070      | -81.39         |
|----------|------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: float) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 33992 less instructions
RVV executed 32517 less instructions
UVE executed 6774 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 40908    | 8391 | -32517     | -79.49         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 35609    | 1617 | -33992     | -95.46         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 8391     | 1617 | -6774      | -80.73         |
|----------|------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel mvt (size: 2500, type: double) ...


benchmarks/mvt/kernel.c:373:7: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:373:7: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/mvt/kernel.c:377:7: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
      for (int j = 0; j < sizeN; j++)
      ^
benchmarks/mvt/kernel.c:377:7: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 33092 less instructions
RVV executed 30119 less instructions
UVE executed 8272 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 40908    | 10789 | -30119     | -73.63         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 35609    | 2517  | -33092     | -92.93         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10789    | 2517  | -8272      | -76.67         |
|----------|-------|------------|----------------|


Kernel mvt is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: byte) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 19878 less instructions
RVV executed 22127 less instructions
UVE executed 249 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 22504    | 377 | -22127     | -98.32         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 20006    | 128 | -19878     | -99.36         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 377      | 128 | -249       | -66.05         |
|----------|-----|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: half-word) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 19762 less instructions
RVV executed 21812 less instructions
UVE executed 447 less instructions than RVV
|----------|-----|------------|----------------|
| Original | RVV | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 22504    | 692 | -21812     | -96.92         |
|----------|-----|------------|----------------|
| Original | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 20007    | 245 | -19762     | -98.78         |
|----------|-----|------------|----------------|
| RVV      | UVE | Difference | Difference (%) |
|----------|-----|------------|----------------|
| 692      | 245 | -447       | -64.60         |
|----------|-----|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: integer) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 19526 less instructions
RVV executed 21187 less instructions
UVE executed 838 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 22504    | 1317 | -21187     | -94.15         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20005    | 479  | -19526     | -97.61         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1317     | 479  | -838       | -63.63         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: float) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 17026 less instructions
RVV executed 18691 less instructions
UVE executed 834 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20004    | 1313 | -18691     | -93.44         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 17505    | 479  | -17026     | -97.26         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1313     | 479  | -834       | -63.52         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel saxpy (size: 2500, type: double) ...


benchmarks/saxpy/kernel.c:186:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < SIZE; i++) {
    ^
benchmarks/saxpy/kernel.c:186:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 16558 less instructions
RVV executed 17449 less instructions
UVE executed 1608 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 20004    | 2555 | -17449     | -87.23         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 17505    | 947  | -16558     | -94.59         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 2555     | 947  | -1608      | -62.94         |
|----------|------|------------|----------------|


Kernel saxpy is similar enough

### Attempting to compile and run kernel sgd (size: 0, type: double) ...


benchmarks/sgd/kernel.c:276:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (j = 0; j /*< BATCH_SIZE && b + j*/ < PB_N; j++)
            ^
benchmarks/sgd/kernel.c:276:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:265:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < PB_N /*BATCH_SIZE*/; i++)
        ^
benchmarks/sgd/kernel.c:265:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:259:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (j = 0; j < PB_D; j++)
            ^
benchmarks/sgd/kernel.c:259:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:291:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int j = 0; j < PB_D; j++)
        ^
benchmarks/sgd/kernel.c:291:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:301:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:301:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:306:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:306:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:310:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:310:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:276:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (j = 0; j /*< BATCH_SIZE && b + j*/ < PB_N; j++)
            ^
benchmarks/sgd/kernel.c:276:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:265:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (i = 0; i < PB_N /*BATCH_SIZE*/; i++)
        ^
benchmarks/sgd/kernel.c:265:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:259:13: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
            for (j = 0; j < PB_D; j++)
            ^
benchmarks/sgd/kernel.c:259:13: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:291:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int j = 0; j < PB_D; j++)
        ^
benchmarks/sgd/kernel.c:291:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:301:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:301:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:306:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:306:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/sgd/kernel.c:310:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (int i = 0; i < PB_N; i++)
    ^
benchmarks/sgd/kernel.c:310:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 4835444 less instructions
RVV executed 6245733 less instructions
UVE executed 1484615 less instructions than RVV
|----------|---------|------------|----------------|
| Original | RVV     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 8408724  | 2162991 | -6245733   | -74.28         |
|----------|---------|------------|----------------|
| Original | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 5513820  | 678376  | -4835444   | -87.70         |
|----------|---------|------------|----------------|
| RVV      | UVE     | Difference | Difference (%) |
|----------|---------|------------|----------------|
| 2162991  | 678376  | -1484615   | -68.64         |
|----------|---------|------------|----------------|


Kernel sgd is similar enough

### Attempting to compile and run kernel spmv_ellpack (size: 0, type: double) ...


benchmarks/spmv_ellpack/kernel.c:62:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (j = 0; j < L; j++) {
        ^
benchmarks/spmv_ellpack/kernel.c:62:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 48414 less instructions
RVV executed 27652 less instructions
UVE executed 23722 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 55832    | 28180 | -27652     | -49.53         |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 52872    | 4458  | -48414     | -91.57         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 28180    | 4458  | -23722     | -84.18         |
|----------|-------|------------|----------------|


Kernel spmv_ellpack is similar enough

### Attempting to compile and run kernel spmv_ellpack_delimiters (size: 0, type: double) ...


benchmarks/spmv_ellpack_delimiters/kernel.c:71:9: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
        for (int j = 0; j < cur_nnz; j++) {
        ^
benchmarks/spmv_ellpack_delimiters/kernel.c:71:9: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 21889 less instructions
RVV executed 3209 more instructions
UVE executed 25777 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 25560    | 28769 | 3209       | 12.55          |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 24881    | 2992  | -21889     | -87.97         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 28769    | 2992  | -25777     | -89.60         |
|----------|-------|------------|----------------|


Kernel spmv_ellpack_delimiters is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: byte) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 8, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 42852 less instructions
RVV executed 78586 less instructions
UVE executed 1047 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 1430 | -78586     | -98.21         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 43235    | 383  | -42852     | -99.11         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 1430     | 383  | -1047      | -73.22         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: half-word) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 4, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 48079 less instructions
RVV executed 77372 less instructions
UVE executed 1910 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 2644 | -77372     | -96.70         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 48813    | 734  | -48079     | -98.50         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 2644     | 734  | -1910      | -72.24         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: integer) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 62349 less instructions
RVV executed 74954 less instructions
UVE executed 3626 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 80016    | 5062 | -74954     | -93.67         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 63785    | 1436 | -62349     | -97.75         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 5062     | 1436 | -3626      | -71.63         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: float) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 2, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 66079 less instructions
RVV executed 72458 less instructions
UVE executed 3622 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 77516    | 5058 | -72458     | -93.47         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 67515    | 1436 | -66079     | -97.87         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 5058     | 1436 | -3622      | -71.61         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel stream (size: 2500, type: double) ...


benchmarks/stream/kernel.c:383:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:383:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:386:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:386:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:389:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:389:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]
benchmarks/stream/kernel.c:392:5: remark: the cost-model indicates that interleaving is not beneficial and is explicitly disabled or interleave count is set to 1 [-Rpass-analysis=loop-vectorize]
    for (j=0; j<sizeN; j++)
    ^
benchmarks/stream/kernel.c:392:5: remark: vectorized loop (vectorization width: vscale x 1, interleaved count: 1) [-Rpass=loop-vectorize]

UVE executed 64675 less instructions
RVV executed 67623 less instructions
UVE executed 7053 less instructions than RVV
|----------|------|------------|----------------|
| Original | RVV  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 77516    | 9893 | -67623     | -87.24         |
|----------|------|------------|----------------|
| Original | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 67515    | 2840 | -64675     | -95.79         |
|----------|------|------------|----------------|
| RVV      | UVE  | Difference | Difference (%) |
|----------|------|------------|----------------|
| 9893     | 2840 | -7053      | -71.29         |
|----------|------|------------|----------------|


Kernel stream is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: byte) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 12633 less instructions
UVE executed 11568 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11980    | 11980 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 13045    | 412   | -12633     | -96.84         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11980    | 412   | -11568     | -96.56         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: half-word) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 12534 less instructions
UVE executed 11567 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12030    | 12030 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12997    | 463   | -12534     | -96.44         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 12030    | 463   | -11567     | -96.15         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: integer) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE executed 9933 less instructions
UVE executed 11365 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11930    | 11930 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10498    | 565   | -9933      | -94.62         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 11930    | 565   | -11365     | -95.26         |
|----------|-------|------------|----------------|


Kernel trisolv is similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: float) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE: Values were 872898.812500 and 872898.562500 with difference of 0.25 at index 16
UVE: Values were -16372533.000000 and -16372531.000000 with difference of 2 at index 18
UVE: Values were -20628568.000000 and -20628566.000000 with difference of 2 at index 19
UVE: Values were -60339964.000000 and -60339968.000000 with difference of 4 at index 20
UVE: Values were 113169176.000000 and 113169184.000000 with difference of 8 at index 21
UVE: Values were -315977856.000000 and -315977824.000000 with difference of 32 at index 22
UVE: Values were 147261728.000000 and 147261712.000000 with difference of 16 at index 23
UVE: Values were 651010560.000000 and 651010432.000000 with difference of 128 at index 25
UVE: Values were -1185378560.000000 and -1185377920.000000 with difference of 640 at index 26
UVE: Values were -12704761856.000000 and -12704755712.000000 with difference of 6144 at index 27
UVE: Values were 7187345408.000000 and 7187340800.000000 with difference of 4608 at index 28
UVE: Values were 39105835008.000000 and 39105814528.000000 with difference of 20480 at index 29
UVE: Values were 66696314880.000000 and 66696286208.000000 with difference of 28672 at index 30
UVE: Values were 48554946560.000000 and 48554930176.000000 with difference of 16384 at index 31
UVE: Values were -607494537216.000000 and -607494275072.000000 with difference of 262144 at index 32
UVE: Values were 610435072000.000000 and 610434744320.000000 with difference of 327680 at index 33
UVE: Values were -1177840254976.000000 and -1177839861760.000000 with difference of 393216 at index 34
UVE: Values were -1110662184960.000000 and -1110662053888.000000 with difference of 131072 at index 35
UVE: Values were -2864352329728.000000 and -2864351805440.000000 with difference of 524288 at index 36
UVE: Values were 6941679026176.000000 and 6941676929024.000000 with difference of 2097152 at index 37
UVE: Values were 7714436022272.000000 and 7714433925120.000000 with difference of 2097152 at index 38
UVE: Values were -937770024960.000000 and -937770352640.000000 with difference of 327680 at index 39
UVE: Values were 2280469561344.000000 and 2280468512768.000000 with difference of 1048576 at index 40
UVE: Values were 324196564992.000000 and 324198203392.000000 with difference of 1638400 at index 41
UVE: Values were -15020143411200.000000 and -15020142362624.000000 with difference of 1048576 at index 42
UVE: Values were 181748151353344.000000 and 181748101021696.000000 with difference of 50331648 at index 43
UVE: Values were -191808457932800.000000 and -191808407601152.000000 with difference of 50331648 at index 44
UVE: Values were 82725641912320.000000 and 82725616746496.000000 with difference of 25165824 at index 45
UVE: Values were -2094262694969344.000000 and -2094262158098432.000000 with difference of 536870912 at index 46
UVE: Values were -3798025621209088.000000 and -3798024815902720.000000 with difference of 805306368 at index 47
UVE: Values were 28793297543626752.000000 and 28793295396143104.000000 with difference of 2147483648 at index 48
UVE: Values were 54335648441565184.000000 and 54335639851630592.000000 with difference of 8589934592 at index 49
UVE executed 8708 less instructions
UVE executed 10140 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 10705 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 9273     | 565   | -8708      | -93.91         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 565   | -10140     | -94.72         |
|----------|-------|------------|----------------|


Kernel trisolv: Did not generate result similar enough

### Attempting to compile and run kernel trisolv (size: 2500, type: double) ...


benchmarks/trisolv/kernel.c:286:18: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
Unknown data dependence. Memory location is the same as accessed at benchmarks/trisolv/kernel.c:286:39 [-Rpass-analysis=loop-vectorize]
            x[i] -= L[i * SIZE + j] * x[j];
                 ^
benchmarks/trisolv/kernel.c:283:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
        for (int j = 0; j < i; ++j) {
        ^

UVE: Values were -3798025834736546.500000 and -3798025834736547.500000 with difference of 1 at index 47
UVE executed 8483 less instructions
UVE executed 9915 less instructions than RVV
|----------|-------|------------|----------------|
| Original | RVV   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 10705 | 0          | 0.00           |
|----------|-------|------------|----------------|
| Original | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 9273     | 790   | -8483      | -91.48         |
|----------|-------|------------|----------------|
| RVV      | UVE   | Difference | Difference (%) |
|----------|-------|------------|----------------|
| 10705    | 790   | -9915      | -92.62         |
|----------|-------|------------|----------------|


Kernel trisolv: Did not generate result similar enough
